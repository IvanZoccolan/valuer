% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exotic_BS_pricing_engine.R
\docType{class}
\name{exotic_bs_engine}
\alias{exotic_bs_engine}
\title{Exotic option pricing with GBM}
\format{\code{\link{R6Class}} object.}
\usage{
exotic_bs_engine
}
\value{
Object of \code{\link{R6Class}}
}
\description{
Class for a  pricing engine of a path dependent derivative
product with an underlying asset modeled as a geometric Brownian motion.
}
\section{Methods}{

\describe{
  \item{\code{new}}{Constructor method. It takes as
   arguments: \code{product} a \code{\link{path_dependent}} object,
   \code{interest} a \code{parameters} object carrying the
   interest rate, \code{spot} a \code{numeric} positive scalar which
   is the initial value of the underlying asset, \code{volatility} a
   \code{parameters} object carrying the volatility of the underlying
    asset and \code{dividends} a \code{parameters} object carrying the
    continuous dividend payout rate}
  \item{\code{get_one_path}}{Returns a \code{numeric}
   vector with a simulated path of the product underlying asset modeled
    as a risk neutral geometric Brownian motion process.}
  \item{\code{run_simulation}}{Runs the Monte Carlo simulation and stores
   the results in a \code{gatherer} object. Takes as arguments a
   \code{gatherer} object to store the results and an
   \code{integer} scalar with the number of paths to simulate.}
  \item{\code{discount_one_path}}{Discounts a simulated path of the
  underlying asset. It takes as argument \code{spot_values} a
  \code{numeric} vector of simulated values of the underlying asset,
  calculates the cash flows and takes their present value given the
  discount factors. Returns a \code{numeric} scalar with the present
  value of the discounted product cash flows.}
  \item{\code{discounts}}{\code{\link{R6Class}} active binding which
  calculates the discount factors. It is called during the initialize
  method given the interest rate is constant with this implementation.}
  }
}
\examples{
\dontrun{prod_time <- timeDate::timeSequence(from="2016-07-09", to="2017-07-09")
prod <- path_dependent_asian$new(prod_time)
r <- constant_parameters$new(0.01)
spot <- 100
vol <- constant_parameters$new(0.2)
div <- constant_parameters$new(0.0)
engine <- exotic_bs_engine$new(prod, r, spot, vol, div)
the_gatherer <- mc_gatherer$new()
no_of_paths <- 1e3
engine$run_simulation(the_gatherer, no_of_paths)
the_gatherer$get_results()
}
}
\keyword{datasets}

