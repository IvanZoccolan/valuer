% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/va_products.R
\docType{class}
\name{va_product}
\alias{va_product}
\title{Generic Variable Annuity  product class}
\format{\code{\link{R6Class}} object.}
\usage{
#Sets up the payoff as a roll-up with roll-up rate 1%

rate <- constant_parameters$new(0.01)

premium <- 100
rollup <- payoff_rollup$new(premium, rate)

#Five years time-line
times <- timeDate::timeSequence(from="2016-01-01", to="2020-12-31")

fee <- 0.02
barrier <- 200
penalty <- 0.1

#It shouldn't be instantiated as it's a generic contract base class.
va <- va_product$new(rollup, times, fee, barrier, penalty)
}
\value{
Object of \code{\link{R6Class}}
}
\description{
Class providing an interface for a generic VA product object. It inherits from \code{\link{path_dependent}}. \cr This class shouldn't be instantiated but used as base class for implementing  products with contract riders such as GMAB, GMIB, etc.
It supports a simple state-dependent fee structure with a single barrier. \cr
See \bold{References} for more details on variable annuities.
}
\section{Fields}{

\describe{
\item{\code{the_payoff}}{(\code{private}) A \code{\link{payoff_guarantee}} object which stores the type of payoff
(e.g: roll-up, ratchet, etc).}

\item{\code{the_fee}}{(\code{private}) A positive scalar with the annual VA contract fee.}

\item{\code{the_barrier}}{(\code{private}) A positive scalar with the barrier for state-dependent fees.}

\item{\code{the_penalty}}{(\code{private}) A scalar with the withdrawal penalty.
Must be between 0 and 1.}
}}
\section{Methods}{

\describe{
  \item{\code{new}}{Constructor method which takes as arguments:
  \describe{
    \item{\code{payoff}}{ \code{\link{payoff_guarantee}} object with the type of payoff (e.g: roll-up, ratchet)}
\item{\code{prod_times}}{ \code{\link{timeSequence}} object with the product timeline}
\item{\code{fee}}{ positive scalar with the fee. If not provided defaults to 0.02}
\item{\code{barrier}}{ positive scalar with the barrier. If not provided defaults to 0}
\item{\code{penalty}}{ scalar between 0 and 1 with the withdrawal penalty. If not provided defaults to \code{Inf}}
}
}
  \item{\code{get_times}}{get method for the product time-line. Retuns a \code{\link{timeDate}} object}
  \item{\code{max_number_cfs}}{ returns an \code{integer} with the maximun number of cash flows the product can generate}
  \item{\code{cash_flow_times}}{retuns a \code{\link{timeDate}} object with the possible cash flow times. Within this base class the method simply returns the product time-line.}
  \item{\code{cash_flows}}{returns a \code{\link{cash_flows}} object with the cash flows of the product. It takes as argument \code{spot_values} a \code{numeric} vector which holds the values of the underlying asset this method will calculate the cash flows from}
  }
}
\references{
\enumerate{
\item{\cite{ Bacinello A.R., Millossovich P., Olivieri A., Pitacco  E.,
"Variable annuities: a unifying valuation approach." In: Insurance: Mathematics and Economics 49 (2011), pp. 285-297.
}}
\item{\cite{Bernard C., Hardy M. and Mackay A. "State-dependent fees for variable
 annuity guarantees." In: Astin Bulletin 44 (2014), pp. 559-585.}}
 }
}
\keyword{datasets}

